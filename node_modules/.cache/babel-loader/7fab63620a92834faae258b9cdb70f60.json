{"ast":null,"code":"var _jsxFileName = \"/Users/martinsarubbi/git/opticar-web-fe/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport MaterialTable from 'material-table';\nimport { Button } from '@material-ui/core';\nimport AddIcon from \"@material-ui/icons/Add\";\nimport XLSX from 'xlsx';\nimport { uploadFile } from './services/UploadFile';\nconst EXTENSIONS = ['xlsx', 'xls', 'csv'];\n\nfunction App() {\n  const [colDefs, setColDefs] = useState();\n  const [data, setData] = useState();\n  const [isDisabled, setIsDisabled] = useState(true);\n\n  const getExention = file => {\n    const parts = file.name.split('.');\n    const extension = parts[parts.length - 1];\n    return EXTENSIONS.includes(extension); // return boolean\n  };\n\n  const convertToJson = (headers, data) => {\n    const rows = [];\n    data.forEach(row => {\n      let rowData = {};\n      row.forEach((element, index) => {\n        rowData[headers[index]] = element;\n      });\n      rows.push(rowData);\n    });\n    return rows;\n  };\n\n  const importExcel = e => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = event => {\n      //parse data\n      const bstr = event.target.result;\n      const workBook = XLSX.read(bstr, {\n        type: \"binary\"\n      }); //get first sheet\n\n      const workSheetName = workBook.SheetNames[0];\n      const workSheet = workBook.Sheets[workSheetName]; //convert to array\n\n      const fileData = XLSX.utils.sheet_to_json(workSheet, {\n        header: 1\n      }); // console.log(fileData)\n\n      const headers = fileData[0];\n      const heads = headers.map(head => ({\n        title: head,\n        field: head\n      }));\n      setColDefs(heads); //removing header\n\n      fileData.splice(0, 1);\n      setData(convertToJson(headers, fileData));\n      setIsDisabled(false);\n    };\n\n    if (file) {\n      if (getExention(file)) {\n        reader.readAsBinaryString(file);\n      } else {\n        alert(\"Invalid file input, Select Excel, CSV file\");\n      }\n    } else {\n      setData([]);\n      setColDefs([]);\n    }\n  };\n\n  function loadData() {\n    for (let i = 0; i < data.length; i++) {\n      switch (data[i].title) {\n        case \"DNI\":\n          data[i].title = \"dni\";\n          data[i].field = \"dni\";\n\n        case \"Nombre\":\n          data[i].title = \"name\";\n          data[i].field = \"name\";\n\n        case \"Apellido\":\n          data[i].title = \"surname\";\n          data[i].field = \"surname\";\n\n        case \"Dirección\":\n          data[i].title = \"address\";\n          data[i].field = \"address\";\n\n        case \"Teléfono\":\n          data[i].title = \"telephone\";\n          data[i].field = \"telephone\";\n\n        case \"Latitud\":\n          data[i].title = \"latitude\";\n          data[i].field = \"latitude\";\n\n        case \"Longitud\":\n          data[i].title = \"longitude\";\n          data[i].field = \"longitude\";\n\n        case \"Localidad/Barrio\":\n          data[i].title = \"neighborhood\";\n          data[i].field = \"neighborhood\";\n\n        case \"Provincia\":\n          data[i].title = \"province\";\n          data[i].field = \"province\";\n\n        case \"Código de barras del producto\":\n          data[i].title = \"barcode\";\n          data[i].field = \"barcode\";\n\n        case \"Descripción del producto\":\n          data[i].title = \"description\";\n          data[i].field = \"description\";\n\n        case \"Categoría\":\n          data[i].title = \"category\";\n          data[i].field = \"category\";\n\n        case \"Peso\":\n          data[i].title = \"weight\";\n          data[i].field = \"weight\";\n\n        case \"Ancho\":\n          data[i].title = \"width\";\n          data[i].field = \"width\";\n\n        case \"Largo\":\n          data[i].title = \"large\";\n          data[i].field = \"large\";\n\n        case \"Alto\":\n          data[i].title = \"height\";\n          data[i].field = \"height\";\n\n        case \"Fragilidad\":\n          data[i].title = \"fragility\";\n          data[i].field = \"fragility\";\n\n        case \"Apilabilidad\":\n          data[i].title = \"stackability\";\n          data[i].field = \"stackability\";\n      }\n    }\n\n    setData([]);\n    setColDefs([]);\n    setIsDisabled(true);\n    uploadFile(data);\n    alert('Productos cargados correctamente.');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, \"Opticar\"), /*#__PURE__*/React.createElement(\"h4\", {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, \"Importe los datos desde un Excel\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ButtonContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    component: \"label\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, \" \", /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }), \" Subir archivo\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: importExcel,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    disabled: isDisabled,\n    onClick: loadData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, \" \", \"Cargar los datos\"))), /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Datos de pedidos\",\n    data: data,\n    columns: colDefs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/martinsarubbi/git/opticar-web-fe/src/App.js"],"names":["React","useState","MaterialTable","Button","AddIcon","XLSX","uploadFile","EXTENSIONS","App","colDefs","setColDefs","data","setData","isDisabled","setIsDisabled","getExention","file","parts","name","split","extension","length","includes","convertToJson","headers","rows","forEach","row","rowData","element","index","push","importExcel","e","target","files","reader","FileReader","onload","event","bstr","result","workBook","read","type","workSheetName","SheetNames","workSheet","Sheets","fileData","utils","sheet_to_json","header","heads","map","head","title","field","splice","readAsBinaryString","alert","loadData","i"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport MaterialTable from 'material-table'\nimport { Button } from '@material-ui/core';\nimport AddIcon from \"@material-ui/icons/Add\";\nimport XLSX from 'xlsx';\nimport { uploadFile } from './services/UploadFile';\n\nconst EXTENSIONS = ['xlsx', 'xls', 'csv']\nfunction App() {\n  const [colDefs, setColDefs] = useState();\n  const [data, setData] = useState();\n  const [isDisabled, setIsDisabled] = useState(true);\n\n  const getExention = (file) => {\n    const parts = file.name.split('.')\n    const extension = parts[parts.length - 1]\n    return EXTENSIONS.includes(extension) // return boolean\n  }\n\n  const convertToJson = (headers, data) => {\n    const rows = []\n    data.forEach(row => {\n      let rowData = {}\n      row.forEach((element, index) => {\n        rowData[headers[index]] = element\n      })\n      rows.push(rowData)\n\n    });\n    return rows\n  }\n\n\n  const importExcel = (e) => {\n    const file = e.target.files[0]\n\n    const reader = new FileReader()\n    reader.onload = (event) => {\n      //parse data\n\n      const bstr = event.target.result\n      const workBook = XLSX.read(bstr, { type: \"binary\" })\n\n      //get first sheet\n      const workSheetName = workBook.SheetNames[0]\n      const workSheet = workBook.Sheets[workSheetName]\n\n      //convert to array\n      const fileData = XLSX.utils.sheet_to_json(workSheet, { header: 1 })\n\n      // console.log(fileData)\n      const headers = fileData[0]\n      const heads = headers.map(head => ({ title: head, field: head }))\n      \n      setColDefs(heads)\n\n      //removing header\n      fileData.splice(0, 1)\n\n      setData(convertToJson(headers, fileData))\n      setIsDisabled(false)\n    }\n\n    if (file) {\n      if (getExention(file)) {\n        reader.readAsBinaryString(file)\n      }\n      else {\n        alert(\"Invalid file input, Select Excel, CSV file\")\n      }\n    } else {\n      setData([])\n      setColDefs([])\n    }\n  }\n\n  function loadData() {\n    for(let i = 0; i < data.length; i++) {\n      switch(data[i].title) {\n        case \"DNI\":\n          data[i].title = \"dni\";\n          data[i].field = \"dni\";\n        case \"Nombre\":\n          data[i].title = \"name\";\n          data[i].field = \"name\";\n        case \"Apellido\":\n          data[i].title = \"surname\";\n          data[i].field = \"surname\";\n        case \"Dirección\":\n          data[i].title = \"address\";\n          data[i].field = \"address\";\n        case \"Teléfono\":\n          data[i].title = \"telephone\";\n          data[i].field = \"telephone\";\n        case \"Latitud\":\n          data[i].title = \"latitude\";\n          data[i].field = \"latitude\";\n        case \"Longitud\":\n          data[i].title = \"longitude\";\n          data[i].field = \"longitude\";\n        case \"Localidad/Barrio\":\n          data[i].title = \"neighborhood\";\n          data[i].field = \"neighborhood\";\n        case \"Provincia\":\n          data[i].title = \"province\";\n          data[i].field = \"province\";\n        case \"Código de barras del producto\":\n          data[i].title = \"barcode\";\n          data[i].field = \"barcode\";\n        case \"Descripción del producto\":\n          data[i].title = \"description\";\n          data[i].field = \"description\";\n        case \"Categoría\":\n          data[i].title = \"category\";\n          data[i].field = \"category\";\n        case \"Peso\":\n          data[i].title = \"weight\";\n          data[i].field = \"weight\";\n        case \"Ancho\":\n          data[i].title = \"width\";\n          data[i].field = \"width\";\n        case \"Largo\":\n          data[i].title = \"large\";\n          data[i].field = \"large\";\n        case \"Alto\":\n          data[i].title = \"height\";\n          data[i].field = \"height\";\n        case \"Fragilidad\":\n          data[i].title = \"fragility\";\n          data[i].field = \"fragility\";\n        case \"Apilabilidad\":\n          data[i].title = \"stackability\";\n          data[i].field = \"stackability\";\n      }\n    }\n    setData([]);\n    setColDefs([]);\n    setIsDisabled(true);\n    uploadFile(data);\n    alert('Productos cargados correctamente.');\n  }\n\n\n  return (\n    <div className=\"App\">\n      <h1 align=\"center\">Opticar</h1>\n      <h4 align='center'>Importe los datos desde un Excel</h4>\n      <div className='ButtonContainer'>\n        <div className=\"Buttons\">\n        <Button variant=\"contained\" component=\"label\" color=\"primary\">\n          {\" \"}\n          <AddIcon /> Subir archivo\n          <input type=\"file\" onChange={importExcel} hidden />\n        </Button>\n        </div>\n        <div className=\"Buttons\">\n        <Button variant=\"contained\" disabled={isDisabled} onClick={loadData}>\n          {\" \"}\n          Cargar los datos\n        </Button>\n        </div>\n      </div>\n      <MaterialTable title=\"Datos de pedidos\" data={data} columns={colDefs} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}