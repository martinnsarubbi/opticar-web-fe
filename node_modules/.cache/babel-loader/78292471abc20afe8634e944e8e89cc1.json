{"ast":null,"code":"var _jsxFileName = \"/Users/martinsarubbi/git/opticar-web-fe/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport MaterialTable from 'material-table';\nimport { Button } from '@material-ui/core';\nimport AddIcon from \"@material-ui/icons/Add\";\nimport XLSX from 'xlsx';\nconst EXTENSIONS = ['xlsx', 'xls', 'csv'];\n\nfunction App() {\n  const [colDefs, setColDefs] = useState();\n  const [data, setData] = useState();\n\n  const getExention = file => {\n    const parts = file.name.split('.');\n    const extension = parts[parts.length - 1];\n    return EXTENSIONS.includes(extension); // return boolean\n  };\n\n  const convertToJson = (headers, data) => {\n    const rows = [];\n    data.forEach(row => {\n      let rowData = {};\n      row.forEach((element, index) => {\n        rowData[headers[index]] = element;\n      });\n      rows.push(rowData);\n    });\n    return rows;\n  };\n\n  const importExcel = e => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = event => {\n      //parse data\n      const bstr = event.target.result;\n      const workBook = XLSX.read(bstr, {\n        type: \"binary\"\n      }); //get first sheet\n\n      const workSheetName = workBook.SheetNames[0];\n      const workSheet = workBook.Sheets[workSheetName]; //convert to array\n\n      const fileData = XLSX.utils.sheet_to_json(workSheet, {\n        header: 1\n      }); // console.log(fileData)\n\n      const headers = fileData[0];\n      const heads = headers.map(head => ({\n        title: head,\n        field: head\n      }));\n      setColDefs(heads); //removing header\n\n      fileData.splice(0, 1);\n      setData(convertToJson(headers, fileData));\n    };\n\n    if (file) {\n      if (getExention(file)) {\n        reader.readAsBinaryString(file);\n      } else {\n        alert(\"Invalid file input, Select Excel, CSV file\");\n      }\n    } else {\n      setData([]);\n      setColDefs([]);\n    }\n  };\n\n  const loadData = () => {};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Opticar\"), /*#__PURE__*/React.createElement(\"h4\", {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Importe los datos desde un Excel\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    padding: \"2-\",\n    variant: \"contained\",\n    component: \"label\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \" \", /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), \" Subir archivo\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: importExcel,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      alert('clicked');\n    },\n    variant: \"contained\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Cargar los datos\")), /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Datos de pedidos\",\n    data: data,\n    columns: colDefs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/martinsarubbi/git/opticar-web-fe/src/App.js"],"names":["React","useState","MaterialTable","Button","AddIcon","XLSX","EXTENSIONS","App","colDefs","setColDefs","data","setData","getExention","file","parts","name","split","extension","length","includes","convertToJson","headers","rows","forEach","row","rowData","element","index","push","importExcel","e","target","files","reader","FileReader","onload","event","bstr","result","workBook","read","type","workSheetName","SheetNames","workSheet","Sheets","fileData","utils","sheet_to_json","header","heads","map","head","title","field","splice","readAsBinaryString","alert","loadData"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport MaterialTable from 'material-table'\nimport { Button } from '@material-ui/core';\nimport AddIcon from \"@material-ui/icons/Add\";\nimport XLSX from 'xlsx'\n\nconst EXTENSIONS = ['xlsx', 'xls', 'csv']\nfunction App() {\n  const [colDefs, setColDefs] = useState()\n  const [data, setData] = useState()\n\n  const getExention = (file) => {\n    const parts = file.name.split('.')\n    const extension = parts[parts.length - 1]\n    return EXTENSIONS.includes(extension) // return boolean\n  }\n\n  const convertToJson = (headers, data) => {\n    const rows = []\n    data.forEach(row => {\n      let rowData = {}\n      row.forEach((element, index) => {\n        rowData[headers[index]] = element\n      })\n      rows.push(rowData)\n\n    });\n    return rows\n  }\n\n  const importExcel = (e) => {\n    const file = e.target.files[0]\n\n    const reader = new FileReader()\n    reader.onload = (event) => {\n      //parse data\n\n      const bstr = event.target.result\n      const workBook = XLSX.read(bstr, { type: \"binary\" })\n\n      //get first sheet\n      const workSheetName = workBook.SheetNames[0]\n      const workSheet = workBook.Sheets[workSheetName]\n      //convert to array\n      const fileData = XLSX.utils.sheet_to_json(workSheet, { header: 1 })\n      // console.log(fileData)\n      const headers = fileData[0]\n      const heads = headers.map(head => ({ title: head, field: head }))\n      setColDefs(heads)\n\n      //removing header\n      fileData.splice(0, 1)\n\n\n      setData(convertToJson(headers, fileData))\n    }\n\n    if (file) {\n      if (getExention(file)) {\n        reader.readAsBinaryString(file)\n      }\n      else {\n        alert(\"Invalid file input, Select Excel, CSV file\")\n      }\n    } else {\n      setData([])\n      setColDefs([])\n    }\n  }\n\n  const loadData = () => {\n\n  } \n\n\n  return (\n    <div className=\"App\">\n      <h1 align=\"center\">Opticar</h1>\n      <h4 align='center'>Importe los datos desde un Excel</h4>\n      <div>\n        <Button padding=\"2-\" variant=\"contained\" component=\"label\" color=\"primary\">\n          {\" \"}\n          <AddIcon /> Subir archivo\n          <input type=\"file\" onChange={importExcel} hidden />\n        </Button>\n        <Button\n          onClick={() => {\n            alert('clicked');\n          }}\n          variant=\"contained\"\n          disabled\n        >\n          Cargar los datos\n        </Button>\n      </div>\n      <MaterialTable title=\"Datos de pedidos\" data={data} columns={colDefs} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}