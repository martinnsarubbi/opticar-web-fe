{"ast":null,"code":"var _jsxFileName = \"/Users/martinsarubbi/git/opticar-web-fe/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport MaterialTable from 'material-table';\nimport { Button } from '@material-ui/core';\nimport AddIcon from \"@material-ui/icons/Add\";\nimport XLSX from 'xlsx';\nimport { uploadFile } from './services/UploadFile';\nimport { BarChartOutlined } from '@material-ui/icons';\nconst EXTENSIONS = ['xlsx', 'xls', 'csv'];\n\nfunction App() {\n  const [colDefs, setColDefs] = useState();\n  const [data, setData] = useState();\n  const [isDisabled, setIsDisabled] = useState(true);\n\n  const getExention = file => {\n    const parts = file.name.split('.');\n    const extension = parts[parts.length - 1];\n    return EXTENSIONS.includes(extension); // return boolean\n  };\n\n  const convertToJson = (headers, data) => {\n    const rows = [];\n    data.forEach(row => {\n      let rowData = {};\n      row.forEach((element, index) => {\n        rowData[headers[index]] = element;\n      });\n      rows.push(rowData);\n    });\n    return rows;\n  };\n\n  const importExcel = e => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = event => {\n      //parse data\n      const bstr = event.target.result;\n      const workBook = XLSX.read(bstr, {\n        type: \"binary\"\n      }); //get first sheet\n\n      const workSheetName = workBook.SheetNames[0];\n      const workSheet = workBook.Sheets[workSheetName]; //convert to array\n\n      const fileData = XLSX.utils.sheet_to_json(workSheet, {\n        header: 1\n      }); // console.log(fileData)\n\n      const headers = fileData[0];\n      const heads = headers.map(head => ({\n        title: head,\n        field: head\n      }));\n      setColDefs(heads); //removing header\n\n      fileData.splice(0, 1);\n      setData(convertToJson(headers, fileData));\n      setIsDisabled(false);\n    };\n\n    if (file) {\n      if (getExention(file)) {\n        reader.readAsBinaryString(file);\n      } else {\n        alert(\"Invalid file input, Select Excel, CSV file\");\n      }\n    } else {\n      setData([]);\n      setColDefs([]);\n    }\n  };\n\n  function loadData() {\n    console.log(data);\n\n    for (let i = 0; i < data.length; i++) {\n      data[i].dni = data[i].DNI;\n      data[i].name = data[i].Nombre;\n      data[i].surname = data[i].Apellido;\n      data[i].address = data[i].Dirección;\n      data[i].telephone = data[i].Teléfono;\n      data[i].latitude = data[i].Latitud;\n      data[i].longitude = data[i].Longitud;\n      data[i].neighborhood = data[i]['Partido/Comuna'];\n      data[i].province = data[i].Provincia;\n      data[i].barcode = data[i]['Código de barras del producto'];\n      data[i].description = data[i]['Descripción del producto'];\n      data[i].category = data[i]['Categoría'];\n      data[i].department = data[i]['Piso/Departamento'];\n      data[i].deliveryDate = data[i]['Fecha de entrega'];\n      data[i].weight = data[i].Peso;\n      data[i].width = data[i].Ancho;\n      data[i].large = data[i].Largo;\n      data[i].height = data[i].Alto;\n\n      if (data[i].Fragilidad === 'Si' || data[i].Fragilidad === 'si' || data[i].Fragilidad === 'Sí' || data[i].Fragilidad === 'sí') {\n        data[i].fragility = true;\n      } else {\n        data[i].fragility = false;\n      }\n\n      if (data[i].Apilabilidad === 'Si' || data[i].Apilabilidad === 'si' || data[i].Apilabilidad === 'Sí' || data[i].Apilabilidad === 'sí') {\n        data[i].stackability = true;\n      } else {\n        data[i].stackability = false;\n      }\n\n      if (data[i].Rotabilidad === 'Si' || data[i].Rotabilidad === 'si' || data[i].Rotabilidad === 'Sí' || data[i].Rotabilidad === 'sí') {\n        data[i].rotability = true;\n      } else {\n        data[i].rotability = false;\n      }\n\n      data[i].stackability = data[i].Apilabilidad;\n    }\n\n    setData([]);\n    setColDefs([]);\n    setIsDisabled(true);\n    uploadFile(data);\n    alert('Productos cargados correctamente.');\n    window.location.reload();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, \"Opticar\"), /*#__PURE__*/React.createElement(\"h4\", {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, \"Importe los datos desde un Excel\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ButtonContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    component: \"label\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \" \", /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }), \" Subir archivo\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: importExcel,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    disabled: isDisabled,\n    onClick: loadData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, \" \", \"Cargar los datos\"))), /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Datos de pedidos\",\n    data: data,\n    columns: colDefs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/martinsarubbi/git/opticar-web-fe/src/App.js"],"names":["React","useState","MaterialTable","Button","AddIcon","XLSX","uploadFile","BarChartOutlined","EXTENSIONS","App","colDefs","setColDefs","data","setData","isDisabled","setIsDisabled","getExention","file","parts","name","split","extension","length","includes","convertToJson","headers","rows","forEach","row","rowData","element","index","push","importExcel","e","target","files","reader","FileReader","onload","event","bstr","result","workBook","read","type","workSheetName","SheetNames","workSheet","Sheets","fileData","utils","sheet_to_json","header","heads","map","head","title","field","splice","readAsBinaryString","alert","loadData","console","log","i","dni","DNI","Nombre","surname","Apellido","address","Dirección","telephone","Teléfono","latitude","Latitud","longitude","Longitud","neighborhood","province","Provincia","barcode","description","category","department","deliveryDate","weight","Peso","width","Ancho","large","Largo","height","Alto","Fragilidad","fragility","Apilabilidad","stackability","Rotabilidad","rotability","window","location","reload"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport MaterialTable from 'material-table'\nimport { Button } from '@material-ui/core';\nimport AddIcon from \"@material-ui/icons/Add\";\nimport XLSX from 'xlsx';\nimport { uploadFile } from './services/UploadFile';\nimport { BarChartOutlined } from '@material-ui/icons';\n\nconst EXTENSIONS = ['xlsx', 'xls', 'csv']\nfunction App() {\n  const [colDefs, setColDefs] = useState();\n  const [data, setData] = useState();\n  const [isDisabled, setIsDisabled] = useState(true);\n\n  const getExention = (file) => {\n    const parts = file.name.split('.')\n    const extension = parts[parts.length - 1]\n    return EXTENSIONS.includes(extension) // return boolean\n  }\n\n  const convertToJson = (headers, data) => {\n    const rows = []\n    data.forEach(row => {\n      let rowData = {}\n      row.forEach((element, index) => {\n        rowData[headers[index]] = element\n      })\n      rows.push(rowData)\n\n    });\n    return rows\n  }\n\n\n  const importExcel = (e) => {\n    const file = e.target.files[0]\n\n    const reader = new FileReader()\n    reader.onload = (event) => {\n      //parse data\n\n      const bstr = event.target.result\n      const workBook = XLSX.read(bstr, { type: \"binary\" })\n\n      //get first sheet\n      const workSheetName = workBook.SheetNames[0]\n      const workSheet = workBook.Sheets[workSheetName]\n\n      //convert to array\n      const fileData = XLSX.utils.sheet_to_json(workSheet, { header: 1 })\n\n      // console.log(fileData)\n      const headers = fileData[0]\n      const heads = headers.map(head => ({ title: head, field: head }))\n      \n      setColDefs(heads)\n\n      //removing header\n      fileData.splice(0, 1)\n\n      setData(convertToJson(headers, fileData))\n      setIsDisabled(false)\n    }\n\n    if (file) {\n      if (getExention(file)) {\n        reader.readAsBinaryString(file)\n      }\n      else {\n        alert(\"Invalid file input, Select Excel, CSV file\")\n      }\n    } else {\n      setData([])\n      setColDefs([])\n    }\n  }\n\n  function loadData() {\n    console.log(data);\n    for(let i = 0; i < data.length; i++) {\n        data[i].dni = data[i].DNI;\n        data[i].name = data[i].Nombre;\n        data[i].surname = data[i].Apellido;\n        data[i].address = data[i].Dirección;\n        data[i].telephone = data[i].Teléfono;\n        data[i].latitude = data[i].Latitud;\n        data[i].longitude = data[i].Longitud;\n        data[i].neighborhood = data[i]['Partido/Comuna'];\n        data[i].province = data[i].Provincia;\n        data[i].barcode = data[i]['Código de barras del producto'];\n        data[i].description = data[i]['Descripción del producto'];\n        data[i].category = data[i]['Categoría'];\n        data[i].department = data[i]['Piso/Departamento'];\n        data[i].deliveryDate = data[i]['Fecha de entrega'];\n        data[i].weight = data[i].Peso;\n        data[i].width = data[i].Ancho;\n        data[i].large = data[i].Largo;\n        data[i].height = data[i].Alto;\n        if(data[i].Fragilidad === 'Si' || data[i].Fragilidad === 'si' \n        || data[i].Fragilidad === 'Sí' || data[i].Fragilidad === 'sí') {\n          data[i].fragility = true;\n        } else {\n          data[i].fragility = false;\n        }\n        if(data[i].Apilabilidad === 'Si' || data[i].Apilabilidad === 'si' \n        || data[i].Apilabilidad === 'Sí' || data[i].Apilabilidad === 'sí') {\n          data[i].stackability = true;\n        } else {\n          data[i].stackability = false;\n        }\n        if(data[i].Rotabilidad === 'Si' || data[i].Rotabilidad === 'si' \n        || data[i].Rotabilidad === 'Sí' || data[i].Rotabilidad === 'sí') {\n          data[i].rotability = true;\n        } else {\n          data[i].rotability = false;\n        }\n        data[i].stackability = data[i].Apilabilidad;\n      }\n    \n    setData([]);\n    setColDefs([]);\n    setIsDisabled(true);\n    uploadFile(data);\n    alert('Productos cargados correctamente.');\n    window.location.reload()\n  }\n\n\n  return (\n    <div className=\"App\">\n      <h1 align=\"center\">Opticar</h1>\n      <h4 align='center'>Importe los datos desde un Excel</h4>\n      <div className='ButtonContainer'>\n        <div className=\"Buttons\">\n        <Button variant=\"contained\" component=\"label\" color=\"primary\">\n          {\" \"}\n          <AddIcon /> Subir archivo\n          <input type=\"file\" onChange={importExcel} hidden />\n        </Button>\n        </div>\n        <div className=\"Buttons\">\n        <Button variant=\"contained\" disabled={isDisabled} onClick={loadData}>\n          {\" \"}\n          Cargar los datos\n        </Button>\n        </div>\n      </div>\n      <MaterialTable title=\"Datos de pedidos\" data={data} columns={colDefs} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}